#!/bin/bash
##rpm/pack: Makes an rpm package.
##@copyright GPL-2.0+
eval unset $_ab_pm
PM_ALT=0 VER_S=' ' VER_E=''
abtrycmd rpmarch || rpmarch(){ echo "${ARCH_RPM[$1]:-$1}"; }

# Pre-RPM payload scripts
if [ -f autobuild/pre-rpm ]; then 
	. autobuild/pre-rpm
fi

# Optional Tag: tagname pkgs
rpmopttag(){
	[ "$2" ] || return
	echo -ne "$1:\t\t"; shift
	VER_NONE=${VER_NONE-1} pm_depcom "$@"
}

# Fscked-up varname.
rpmreqprov(){
	if bool $ABRPMAUTOPROVONLY; then
			echo "Autoprov:		yes"
			echo "Autoreq:		no"
	else
			echo "Autoreqprov:	yes"
	fi
}

# There should NOT be any errors.
rpmscripts(){
	for i in {pre,post}{inst,rm}; do
		i=${i/rm/un}
		echo "%${i%inst} -p /bin/bash"
		cat abscripts/${i/un/rm}
		echo
	done
}

# Files, list, boom!
# We are not going to meet any DEBIAN stuffs. The PAKMGR spec says that
# every support wipes its own butt.
rpmfiles(){
	local _strlen_pkg="${#PKGDIR}"
	# Question: Shall we just use -type f?
	find "$PKGDIR" | while read i; do
		[[ -d "$i" && ! -L "$i" ]] && continue
		grep -Fx "$i" "$SRCDIR/autobuild/conffiles" && echo "%config"
		echo "%defattr($(stat --printf %a,%U,%G "$i"),-)"
		rpm_transform "${i:_strlen_pkg}"
	done
}

rpm_transform(){
	# backslashes should be processed first
	# The doc guy seems to forgot the spaces.
	# If a line like a\ file\ with\ spaces works in RPM, then this is correct.
	local p="$1" j badchar=(\\ \" \' \| \* \? . ' ') # Wait, why literal dots?
	for j in "${badchar[@]}"; do p="${p//'$j'/\\$j}"; done
	# RPM guys, again, forgot the % stuffs.
	echo "\"${p//\%/%%}\""
}

# RPM spec generation.
cat > abspec << _ab_rpm_endspec
# Generated automatically by autobuild on $(LANG=C date)
# This is made to ask rpm to pack from built binary.
Name:		$PKGNAME
Version:	${PKGVER//-/_}
Release:	$PKGREL
$(rpmopttag Epoch $PKGEPOCH)
Summary:	$PKGDES

Group:		$(sed -f "$AB/rpm/rpm-sec" <<< "$PKGSEC")
License:	$(abcommaprint "${PKGLICENSE[@]:-Unknown}")
URL:		Unknown
$(rpmreqprov)
BuildRoot:	%{_tmppath}/%{name}-%{version}-%{release}-root-%(%{__id_u} -n)
$(VER_NONE=0 rpmopttag Requires $PKGDEP)
$(rpmopttag Conflicts $PKGCONFL)
$(rpmopttag Obsoletes $PKGREP)
$(rpmopttag Provides $PKGPROV)
$(rpmopttag Suggests $PKGSUG)

%description
$PKGDES

%prep
true

%build
true

%install
rm -rf "\$RPM_BUILD_ROOT"
cp -ra $PKGDIR "\$RPM_BUILD_ROOT"

%clean
rm -rf "$RPM_BUILD_ROOT"

$(rpmscripts)

%files
$(rpmfiles)
_ab_rpm_endspec

rpmbuild $([ "$CROSS" ] && rpmarch $CROSS) -bb abspec || aberr "RPM PACKING FAILED."
if [ -f autobuild/post-rpm ] ; then
	. autobuild/post-rpm
fi
# eval unset $_ab_pm
